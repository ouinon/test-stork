$c_0:#000000;
$c_1:#FFF3C1;

$c_A:#FFAA00;
$c_B:#005689;
$c_C:#FFAA00;

$wdA:480px;
$wdB:768px;
$wdC:992px;
$wdD:1200px;

$cteWdA:600px;
$cteWdB:940px;
$cteWdC:1040px;

$btnHt:5;
$btnHtSwitchWd:$wdB;
$btnHtB:7;

@import '__mixins.scss';
@import '__color.scss';
@import '_reset.scss';

html{
  font-size: 10px;
}
body{
  overflow-y: scroll;
  overflow-x: hidden;
  background-color: #FFF ;
}

p{
  font-size: 1.5rem;
  line-height: 2rem;
  margin-bottom: 2rem;
}

.cte{
  box-sizing: border-box;
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  // clear: both
  &:after {
    content: "";
    display: table;
    clear: both;
  }
  &.WdA{
    max-width: $cteWdA;
  }
  &.WdB{
    max-width: $cteWdB;
  }
  &.WdC{
    max-width: $cteWdC;
  }
}

// Outer table elements, they ensure correct spaceing of the cells accross the table
.o-tbl{
  position: relative;
  clear: both;
  &.SpcA{
    margin: auto -1rem;
    > .tbl{
      border-spacing: 1rem 0;
    }
  }
  &.SpcB{
    margin: auto -2rem;
    > .tbl{
      border-spacing: 2rem 0;
    }
  }
  &.SpcC{
    margin: auto -3rem;
    > .tbl{
      border-spacing: 3rem 0;
    }
  }
}

// Table elements
.tbl
{
  table-layout: fixed;
  display:table;
  width: 100%;
  border-spacing: 0;
  box-sizing:border-box;
  margin-bottom: 3rem;
  &.FlR{
    float: right;
    width: auto;
  }
  &.FlL{
    float: left;
    width: auto;
  }
  &.Auto{
    width: auto;
  }
  &.Merge{
    > .cll{
      > .o-input{
        border-radius:0rem;
      }
      &:first-child > .o-input{
        border-top-left-radius:0.2rem;
        border-bottom-left-radius:0.2rem;
        &:after{
          border-bottom-left-radius:0.2rem;
        }
      }
      &:last-child  > .o-input{
        border-top-right-radius:0.2rem;
        border-bottom-right-radius:0.2rem;
        &:after{
          border-bottom-right-radius:0.2rem;
        }
      }
    }
     > .cll > .btn{
      border-radius: 0;
    }
    > .cll:first-child > .btn{
      border-top-left-radius: 0.2rem;
      border-bottom-left-radius: 0.2rem;
    }
    > .cll:last-child > .btn{
      border-top-right-radius: 0.2rem;
      border-bottom-right-radius: 0.2rem;
    }
  }
}
// Tables within tables should not include a margin bottom
.tbl .tbl{
    margin-bottom: 0;
}

// Cells
.cll{
    position: relative;
    display:table-cell;
    vertical-align: top;
}

.h1{
  font-size: 3rem;
  // line-height: 3rem;
  // height: 3rem;
  margin-bottom: 2rem;
  vertical-align: top;
  &.Line{
    padding-bottom:2rem;
    border-bottom: 1px solid $c_0;
  }
  &.Center{
    text-align: center;
  }
}

// Buttons
.btn{

  @include c_buttonrules($c_A,$c_1,$c_1,$c_A12);

  &.C_A,.C_A_ &{
    @include c_buttonrules($c_A,$c_0,$c_1,$c_A12);
  }
  &.C_B,.C_B_ &{
    @include c_buttonrules($c_B,$c_1,$c_0,$c_B12);
  }
  &.C_C,.C_C_ &{
    @include c_buttonrules($c_C,$c_0,$c_1,$c_C12);
  }
  &.C_1,.C_1_ &{
    @include c_buttonrules($c_1,$c_0,$c_1,$c_08);
  }
  &.C_0,.C_0_ &{
    @include c_buttonrules($c_0,$c_1,$c_0,$c_08);
  }

  border-collapse: collapse;
  border-radius:0.2rem;
  border:0;
  box-sizing: border-box;
  display: inline-block;
  font-size: 1.5rem;
  height: #{$btnHt}rem;
  line-height: #{$btnHt}rem;
  outline: 0;
  overflow: hidden;
  padding: 0;
  position: relative;
  text-align: left;
  text-decoration: none;
  vertical-align: top;
  width: 100%;
  &[disabled]{
    opacity: 0.5;
    > *{
      cursor: auto;
    }
  }
  > label, > span{
    cursor: pointer;
    padding: 0 1rem;
    white-space: nowrap;
    line-height: inherit;
    height: inherit;
    display: table-cell;
  }
  &.Icn,.Icn_ &{
    padding-right: 4rem;
    > label, > span{
      padding-right: 0;
    }
    > .icn{
      padding: 0;
      width: 4rem;
      position: absolute;
      right: 0;
      top: 0;
      > i{
        width: inherit;
      }
    }
    &.Lft-{
      padding-left: 4rem;
      padding-right: 0;
      > label{
        padding-left: 0;
        padding-right: 1rem;
      }
      > .icn{  
        right: initial;
        left: 0;
        top: 0;
      }
    }
  }
  &.Clear,.Clear_ &{
    background-color: transparent !important;
    border-radius:0 !important;
    &.Icn,.Icn_ &{
      padding-right: 2rem;
    }
    label{
      padding: 0;
    }
    .icn{
      width: 2rem !important;
      background: transparent !important;
    }
  }
}

// Icons
.icn{
  height: inherit;
  line-height: inherit;
  padding: 0 2rem;
  position: relative;
  width: 0px;
  & > span,
  & > i{
    font-size:1.5rem;
    transition: opacity 200ms;
    height: inherit;
    line-height: inherit;
    opacity: 0;
    padding: 0;
    text-align: center;
    vertical-align: middle;
    width: 100%; 
    left: 0; 
    position: absolute;
  }
  & > span{
    opacity: 1;
    z-index: 5;
  }
  & > .fa:first-child{
    opacity: 1;
  }
  .active & > .fa{
    opacity: 1;
  }
  .active & > .fa:first-child{
    opacity: 0;
  }
  .open > .btn & > .fa{
    opacity: 1;
  }
  .open > .btn & > .fa:first-child{
    opacity: 0;
  }
}

.o-box{
  clear: both;
  &.SpcA{
    margin: 0 -1rem;
    > .box{
      padding: 0 1rem;
    }
  }
  &.Wd50 > .box{
    width: 50%;
  }
  &.Wd33 > .box{
    width: 33.33%;
  }
  &.Wd25 > .box{
    width: 25%;
  }
  > .box{
    float:left;
    width: 100%;
    box-sizing: border-box;
  }
}



// Inputs
.o-input{
  overflow:hidden;
  position: relative;
  border-radius: 0.2rem;
  &.Icn{
    $fa-check-square:"\f14a";
    $fa-exclamation-triangle:"\f071";
    $fa-lock:"\f023";
    
    &.Valid{
      .icn.Blank .fa:before{
        color: $c_A;
        content:$fa-check-square;
      }
    }   
    &.Pristine{
      .icn.Blank .fa:before{
        visibility: hidden;
      }
    }
    &.Invalid{
      .icn.Blank .fa:before{
        color: $c_02;
        content:$fa-exclamation-triangle;
      }
    }
    &.Disabled{
      .icn.Blank .fa:before{
        color: $c_0;
        content:$fa-lock;
        visibility: visible;
      }
    }
    .icn{
      color: rgba(0,0,0,0);
      @include grad_h($c_1);
      position: absolute;
      top: 0;
      right: 0;
      height: #{$btnHt}rem;
      line-height: #{$btnHt}rem;
      z-index: 7;
      border-bottom-right-radius:0.2rem;
      border-top-right-radius:0.2rem;
      background: none;
    }
  }
  &:after{
    background-color: $c_08;
    display: block;
    width: 100%;
    height: 0px;
    content: ' ';
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 7;
    transition: height 100ms,background 100ms;
  }
  &:hover:after{
    background-color: $c_07;
    height: 2px;
  }
  &.Focus:hover:after,
  &.Focus:after{
    height: 4px;
  }
  input{
    background-color: $c_1;

    height: #{$btnHt}rem;
    line-height: #{$btnHt}rem;
    width: 100%;
    display: block;
    border: 0;
    outline: 0;
    padding:0 1rem;
    position: relative;
    z-index: 7;
    &[disabled],&[disabled]:hover{
      background-color: $c_08-5;
    }
  }
  &.focus{
    &.Invalid-:hover:after,
    &.Invalid-:after{
      background-color: $c_A;
    }
    &:hover:after,
    &:after{
      background-color: $c_08;
    }
  }
}

.o-table{
    border:1px solid $c_0;
  .btn{
    background-color: rgba(0,0,0,0);
  }
  table{
      color: $c_0;
  }
  th,td{
    // Using before is a bit of a hack
    // As a result of using position relative on the cells there is a border overlap when background color is applied.
    &.Center-.Icn{
      .icn,&.active .icn{
        background-color: transparent;
        background: none;
      }
    }
    &:before{
      border-left:1px solid $c_0;
    }
  }
  tr{
    border-bottom:1px solid $c_0;
    background-color:$c_09;
    transition: background 100ms;
      .icn{
        transition: background 0ms;
      @include grad_h($c_09);
      }
  }
}

@import '_media.scss';